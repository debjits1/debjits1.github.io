{"version":3,"sources":["images/angular.svg","images/react.svg","images/HTML5_Logo.svg","images/javascript.svg","images/CSS3.svg","components/About/About.js","components/Banner/Banner.js","components/Contact/Contact.js","components/cards/Deck.js","components/Skills/Skills.js","components/SplashScreen/SplashScreen.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","className","elements","interp","i","r","Math","sin","PI","Banner","radians","useSpring","to","next","a","from","config","duration","reset","calc","x","y","window","innerWidth","innerHeight","xy","mass","tension","friction","props","set","trans2","map","div","key","style","transform","interpolate","onMouseMove","clientX","clientY","h2","Contact","rel","href","target","cards","skillName","logo","AngularImg","ReactImg","CssImg","HTMLImg","JSImg","scale","rot","random","delay","trans","s","Deck","useState","Set","gone","useSprings","length","bind","useGesture","index","args","down","xDelta","delta","xDir","distance","direction","velocity","dir","add","isGone","has","undefined","size","setTimeout","clear","backgroundImage","Skills","SplashScreen","visibility","setVisibility","bgSpring","opacity","onRest","svg","strokeDashoffset","width","height","viewBox","fill","xmlns","strokeDasharray","d","stroke","strokeWidth","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mGAAAA,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gQCiB5BC,G,kBAfD,WACV,OACI,yBAAKC,UAAU,SACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,iBAEnB,yBAAKA,UAAU,cACX,uBAAGA,UAAU,YAAb,UAA+B,0BAAMA,UAAU,mBAAhB,gCAA/B,gBACA,uBAAGA,UAAU,YAAb,uEAA4F,0BAAMA,UAAU,mBAAhB,yBAA5F,oBACA,uBAAGA,UAAU,YAAb,4D,sCCPVC,G,MAAW,CACb,eACA,eACA,eACA,eACA,eACA,iBAEEC,EAAS,SAAAC,GAAC,OAAI,SAAAC,GAAC,+BAAsB,GAAKC,KAAKC,IAAIF,EAAS,EAAJD,EAAQE,KAAKE,GAAM,KAA5D,YA+BNC,EA9BA,WAAO,IACVC,EAAYC,YAAU,CAC1BC,GAAG,WAAD,4BAAE,WAAMC,GAAN,SAAAC,EAAA,sEACgBD,EAAK,CAAEH,QAAS,EAAIJ,KAAKE,KADzC,iEAAF,mDAAC,GAGHO,KAAM,CAAEL,QAAS,GACjBM,OAAQ,CAAEC,SAAU,MACpBC,OAAO,IANHR,QAQFS,EAAO,SAACC,EAAGC,GAAJ,MAAU,CAACD,EAAIE,OAAOC,WAAa,EAAGF,EAAIC,OAAOE,YAAc,IAT3D,EAUIb,aAAU,iBAAO,CAAEc,GAAI,CAAC,EAAG,GAAIT,OAAQ,CAAEU,KAAM,GAAIC,QAAS,IAAKC,SAAU,SAV/E,mBAUVC,EAVU,KAUHC,EAVG,KAYXC,EAAS,SAACX,EAAGC,GAAJ,4BAAyBD,EAAI,GAA7B,cAAqCC,EAAI,GAAzC,UAEf,OACI,oCACCnB,EAAS8B,KAAI,SAAA5B,GAAC,OAAI,kBAAC,IAAS6B,IAAV,CAAcC,IAAK9B,EAAGH,UAAU,gBAAgBkC,MAAO,CAAEC,UAAW1B,EAAQ2B,YAAYlC,KAAxF,QACnB,yBAAKmC,YAAa,gBAAYlB,EAAZ,EAAGmB,QAAqBlB,EAAxB,EAAemB,QAAf,OAAgCV,EAAI,CAAEL,GAAIN,EAAKC,EAAGC,MAAMpB,UAAU,UAChF,yBAAKA,UAAU,gBACX,kBAAC,IAASgC,IAAV,CAAchC,UAAU,aAAakC,MAAO,CAACC,UAAWP,EAAMJ,GAAGY,aAR9D,SAACjB,EAAGC,GAAJ,4BAAyBD,EAAI,GAA7B,cAAqCC,EAAI,GAAzC,gBAUP,yBAAKpB,UAAU,eACX,kBAAC,IAASwC,GAAV,CAAaxC,UAAU,WAAWkC,MAAO,CAACC,UAAWP,EAAMJ,GAAGY,YAAYN,KAA1E,aACA,kBAAC,IAASE,IAAV,CAAchC,UAAU,WAAWkC,MAAO,CAACC,UAAWP,EAAMJ,GAAGY,YAAYN,KAA3E,yBCpBDW,G,MAdC,WACZ,OACI,yBAAKzC,UAAU,WACX,yBAAKA,UAAU,gDAAf,cAGA,yBAAKA,UAAU,2BACX,uBAAG0C,IAAI,sBAAsB1C,UAAU,SAAS2C,KAAK,8CAA8CC,OAAO,UAA1G,YACA,uBAAGF,IAAI,sBAAsB1C,UAAU,SAAS2C,KAAK,8BAA8BC,OAAO,UAA1F,c,4GCCVC,EAAQ,CACZ,CAACC,UAAW,UAAWC,KAAMC,KAC7B,CAACF,UAAW,QAASC,KAAME,KAC3B,CAACH,UAAW,OAAQC,KAAMG,KAC1B,CAACJ,UAAW,QAASC,KAAMI,KAC3B,CAACL,UAAW,aAAcC,KAAMK,MAI5BzC,EAAK,SAAAR,GAAC,MAAK,CAAEgB,EAAG,EAAGC,GAAQ,EAALjB,EAAQkD,MAAO,EAAGC,IAA2B,GAAhBjD,KAAKkD,SAAV,GAAyBC,MAAW,IAAJrD,IAG9EsD,EAAQ,SAACrD,EAAGsD,GAAJ,2DAAwDtD,EAAI,GAA5D,wBAA8EA,EAA9E,sBAA6FsD,EAA7F,MAwCCC,MAtCf,WAAiB,IAAD,EACCC,oBAAS,kBAAM,IAAIC,OAA3BC,EADO,sBAEOC,YAAWlB,EAAMmB,QAAQ,SAAA7D,GAAC,kCAAUQ,EAAGR,IAAb,IAAiBW,KAN/C,CAAEK,EAAG,EAAGmC,IAAK,EAAGD,MAAO,IAAKjC,GAAI,UAInC,mBAEPQ,EAFO,KAEAC,EAFA,KAIRoC,EAAOC,aAAW,YAAsF,IAA5EC,EAA2E,cAAlFC,KAAkF,MAAnEC,EAAmE,EAAnEA,KAAcC,EAAqD,cAA7DC,MAA6D,MAAtBC,GAAsB,EAA5CC,SAA4C,cAAlCC,UAAkC,OAAfC,EAAe,EAAfA,SAEtFC,EAAMJ,EAAO,GAAK,EAAI,GACvBH,GAFWM,EAAW,IAELb,EAAKe,IAAIV,GAC/BtC,GAAI,SAAA1B,GACF,GAAIgE,IAAUhE,EAAd,CACA,IAAM2E,EAAShB,EAAKiB,IAAIZ,GAIxB,MAAO,CAAEhD,EAHC2D,GAAU,IAAMzD,OAAOC,YAAcsD,EAAMP,EAAOC,EAAS,EAGzDhB,IAFAgB,EAAS,KAAOQ,EAAe,GAANF,EAAWD,EAAW,GAE1CtB,MADHgB,EAAO,IAAM,EACHb,WAAOwB,EAAWjE,OAAQ,CAAEY,SAAU,GAAID,QAAS2C,EAAO,IAAMS,EAAS,IAAM,UAEpGT,GAAQP,EAAKmB,OAASpC,EAAMmB,QAAQkB,YAAW,kBAAMpB,EAAKqB,SAAWtD,GAAI,SAAA1B,GAAC,OAAIQ,EAAGR,QAAK,QAG7F,OACE,yBAAKH,UAAU,YACb,yBAAKA,UAAU,YACZ4B,EAAMG,KAAI,WAAuB5B,GAAvB,IAAGgB,EAAH,EAAGA,EAAGC,EAAN,EAAMA,EAAGkC,EAAT,EAASA,IAAKD,EAAd,EAAcA,MAAd,OACT,kBAAC,IAASrB,IAAV,CAAchC,UAAU,OAAOiC,IAAK9B,EAAG+B,MAAO,CAAEC,UAAWC,YAAY,CAACjB,EAAGC,IAAI,SAACD,EAAGC,GAAJ,4BAAyBD,EAAzB,cAAgCC,EAAhC,cAE7E,kBAAC,IAASY,IAAV,eAAchC,UAAU,QAAWiE,EAAK9D,GAAxC,CAA4C+B,MAAO,CAAEC,UAAWC,YAAY,CAACkB,EAAKD,GAAQI,MACxF,yBAAKzD,UAAU,aAAakC,MAAO,CAACkD,gBAAgB,OAAD,OAASvC,EAAM1C,GAAG4C,KAAlB,QACnD,yBAAK/C,UAAU,aAAa6C,EAAM1C,GAAG2C,WACrC,yBAAK9C,UAAU,sBCpCdqF,G,MAdA,WACX,OACI,yBAAKrF,UAAU,UACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,YAAb,6CAC8C,0BAAMA,UAAU,mBAAhB,gBAE9C,uBAAGA,UAAU,YAAW,0BAAMA,UAAU,mBAAhB,SAAxB,8BAEJ,kBAAC,EAAD,SCoBGsF,G,MA7BM,WAAO,IAAD,EACa1B,oBAAS,GADtB,mBAChB2B,EADgB,KACJC,EADI,KAEjB5D,EAAQlB,YACV,CAAES,EAAG,EAAGL,KAAM,CAAEK,EAAG,OAEjBsE,EAAW/E,YAAU,CACvBK,OAAQ,CAACW,QAAS,GAAIiD,SAAU,KAChC7D,KAAM,CAAC4E,QAAS,GAChB/E,GAAI,CAAC+E,QAAS,GACdC,OAAQ,WAAOH,GAAc,MAEjC,OACI,oCACCD,GACD,kBAAC,IAASvD,IAAV,CAAchC,UAAU,SAASkC,MAAOuD,GACpC,kBAAC,IAASG,IAAV,CAAc5F,UAAU,aAAa6F,iBAAkBjE,EAAMT,EAAG2E,MAAM,MAAMC,OAAO,KAAKC,QAAQ,aAAaC,KAAK,OAAOC,MAAM,8BAC3H,0BAAMC,gBAAgB,MAAMC,EAAE,0IAA0IC,OAAO,QAAQC,YAAY,MACnM,0BAAMH,gBAAgB,MAAMC,EAAE,qGAAqGC,OAAO,QAAQC,YAAY,MAC9J,0BAAMH,gBAAgB,MAAMC,EAAE,qDAAqDC,OAAO,QAAQC,YAAY,MAC9G,0BAAMH,gBAAgB,MAAMC,EAAE,2zBAA2zBC,OAAO,QAAQC,YAAY,MACp3B,0BAAMH,gBAAgB,MAAMC,EAAE,ijCAAijCC,OAAO,QAAQC,YAAY,MAC1mC,0BAAMH,gBAAgB,MAAMC,EAAE,+HAA+HC,OAAO,QAAQC,YAAY,MACxL,0BAAMH,gBAAgB,MAAMC,EAAE,qGAAqGC,OAAO,QAAQC,YAAY,WCJ/JC,MAZf,WACE,OACE,yBAAKvG,UAAU,OACb,kBAAC,EAAD,MACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCJYwG,QACW,cAA7BnF,OAAOoF,SAASC,UAEe,UAA7BrF,OAAOoF,SAASC,UAEhBrF,OAAOoF,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.48ca9bbf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/angular.5c69e565.svg\";","module.exports = __webpack_public_path__ + \"static/media/react.f0793d9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/HTML5_Logo.a3492ddb.svg\";","module.exports = __webpack_public_path__ + \"static/media/javascript.61ed8b05.svg\";","module.exports = __webpack_public_path__ + \"static/media/CSS3.7415a70a.svg\";","import React from 'react';\r\nimport \"./About.css\";\r\nconst About = () => {\r\n    return ( \r\n        <div className=\"about\">\r\n            <div className=\"aboutLeft\">\r\n                <div className=\"imageCircle\"></div>\r\n            </div>\r\n            <div className=\"aboutRight\">\r\n                <p className=\"body-big\">I am a <span className=\"color-2-content\">Web developer / UI developer</span> from India.</p>\r\n                <p className=\"body-big\">I have 6 years of experience as a developer and I love working with <span className=\"color-2-content\">frontend technologies</span> and frameworks.</p>\r\n                <p className=\"body-big\">Besides I love doing graphic design and photography.</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default About;","import React from 'react';\r\nimport { animated, useSpring } from 'react-spring';\r\nimport \"./Banner.css\";\r\n\r\nconst elements = [\r\n    'element1.svg',\r\n    'element2.svg',\r\n    'element3.svg',\r\n    'element4.svg',\r\n    'element5.svg',\r\n    'element6.svg'\r\n];\r\nconst interp = i => r => `translate3d(0, ${15 * Math.sin(r + (i * 2 * Math.PI) / 1.6)}px, 0)`;\r\nconst Banner = () => {\r\n    const { radians } = useSpring({\r\n        to: async next => {\r\n            while (1) await next({ radians: 2 * Math.PI })\r\n        },\r\n        from: { radians: 0 },\r\n        config: { duration: 3500 },\r\n        reset: true,\r\n    });\r\n    const calc = (x, y) => [x - window.innerWidth / 2, y - window.innerHeight / 2];\r\n    const [props, set] = useSpring(() => ({ xy: [0, 0], config: { mass: 10, tension: 550, friction: 140 } }))\r\n    const trans1 = (x, y) => `translate3d(${x / 30}px,${y / 35}px,0)`;\r\n    const trans2 = (x, y) => `translate3d(${x / 10}px,${y / 10}px,0)`;\r\n    \r\n    return ( \r\n        <>\r\n        {elements.map(i => <animated.div key={i} className=\"script-bf-box\" style={{ transform: radians.interpolate(interp) }}>s</animated.div>)}\r\n        <div onMouseMove={({ clientX: x, clientY: y }) => set({ xy: calc(x, y)})} className=\"banner\">\r\n            <div className=\"bannerCircle\">\r\n                <animated.div className=\"color-1-bg\" style={{transform: props.xy.interpolate(trans1)}}></animated.div>\r\n            </div>\r\n            <div className=\"text-center\">\r\n                <animated.h2 className=\"mainHead\" style={{transform: props.xy.interpolate(trans2)}}>Hey there</animated.h2>\r\n                <animated.div className=\"body-big\" style={{transform: props.xy.interpolate(trans2)}}>I am Debjit Sinha</animated.div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Banner;","import React from 'react';\r\nimport \"./Contact.css\";\r\nconst Contact = () => {\r\n    return ( \r\n        <div className=\"contact\">\r\n            <div className=\"body-big text-center heading color-2-content\">\r\n                Let's talk\r\n            </div>\r\n            <div className=\"text-center socialLinks\">\r\n                <a rel=\"noopener noreferrer\" className=\"body-1\" href=\"https://www.linkedin.com/in/frontend-ninja/\" target=\"_blank\">LinkedIn</a>\r\n                <a rel=\"noopener noreferrer\" className=\"body-1\" href=\"https://github.com/debjits1\" target=\"_blank\">Github</a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Contact;","//import { render } from 'react-dom'\r\nimport React, { useState } from 'react'\r\nimport { useSprings, animated, interpolate } from 'react-spring'\r\nimport { useGesture } from 'react-use-gesture'\r\nimport './Deck.css';\r\nimport AngularImg from '../../images/angular.svg';\r\nimport ReactImg from '../../images/react.svg';\r\nimport HTMLImg from '../../images/HTML5_Logo.svg';\r\nimport JSImg from '../../images/javascript.svg';\r\nimport CssImg from '../../images/CSS3.svg';\r\n\r\nconst cards = [\r\n  {skillName: 'Angular', logo: AngularImg},\r\n  {skillName: 'React', logo: ReactImg},\r\n  {skillName: 'CSS3', logo: CssImg},\r\n  {skillName: 'HTML5', logo: HTMLImg},\r\n  {skillName: 'Javascript', logo: JSImg},\r\n];\r\n\r\n// These two are just helpers, they curate spring data, values that are later being interpolated into css\r\nconst to = i => ({ x: 0, y: i * -4, scale: 1, rot: -10 + Math.random() * 20, delay: i * 100 })\r\nconst from = i => ({ x: 0, rot: 0, scale: 1.5, y: -1000 })\r\n// This is being used down there in the view, it interpolates rotation and scale into a css transform\r\nconst trans = (r, s) => `perspective(1500px) rotateX(30deg) rotateY(${r / 10}deg) rotateZ(${r}deg) scale(${s})`\r\n\r\nfunction Deck() {\r\n  const [gone] = useState(() => new Set()) // The set flags all the cards that are flicked out\r\n  const [props, set] = useSprings(cards.length, i => ({ ...to(i), from: from(i) })) // Create a bunch of springs using the helpers above\r\n  // Create a gesture, we're interested in down-state, delta (current-pos - click-pos), direction and velocity\r\n  const bind = useGesture(({ args: [index], down, delta: [xDelta], distance, direction: [xDir], velocity }) => {\r\n    const trigger = velocity > 0.2 // If you flick hard enough it should trigger the card to fly out\r\n    const dir = xDir < 0 ? -1 : 1 // Direction should either point left or right\r\n    if (!down && trigger) gone.add(index) // If button/finger's up and trigger velocity is reached, we flag the card ready to fly out\r\n    set(i => {\r\n      if (index !== i) return // We're only interested in changing spring-data for the current spring\r\n      const isGone = gone.has(index)\r\n      const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0 // When a card is gone it flys out left or right, otherwise goes back to zero\r\n      const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0) // How much the card tilts, flicking it harder makes it rotate faster\r\n      const scale = down ? 1.1 : 1 // Active cards lift up a bit\r\n      return { x, rot, scale, delay: undefined, config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 } }\r\n    })\r\n    if (!down && gone.size === cards.length) setTimeout(() => gone.clear() || set(i => to(i)), 600)\r\n  })\r\n  // Now we're just mapping the animated values to our view, that's it. Btw, this component only renders once. :-)\r\n  return (\r\n    <div className=\"deckRoot\">\r\n      <div className=\"deckWrap\">\r\n        {props.map(({ x, y, rot, scale }, i) => (\r\n          <animated.div className=\"deck\" key={i} style={{ transform: interpolate([x, y], (x, y) => `translate3d(${x}px,${y}px,0)`) }}>\r\n            {/* This is the card itself, we're binding our gesture to it (and inject its index so we know which is which) */}\r\n            <animated.div className=\"card\" {...bind(i)} style={{ transform: interpolate([rot, scale], trans)}}>\r\n              <div className=\"skillImage\" style={{backgroundImage: `url(${cards[i].logo})`}}></div>\r\n              <div className=\"skillName\">{cards[i].skillName}</div>\r\n              <div className=\"skillDesc\"></div>\r\n            </animated.div>\r\n\r\n          </animated.div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Deck;\r\n\r\n","import Deck from \"../cards/Deck\";\r\nimport React from 'react';\r\nimport './Skills.css';\r\nconst Skills = () => {\r\n    return (\r\n        <div className=\"skills\">\r\n            <div className=\"content\">\r\n                <p className=\"body-big\">\r\n                    Here are some of the technologies from my <span className=\"color-2-content\">tech-stack.</span>\r\n                </p>\r\n                <p className=\"body-big\"><span className=\"color-2-content\">Swipe</span> the cards to check them.</p>\r\n            </div>\r\n            <Deck></Deck>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Skills;","import React, { useState } from 'react';\r\nimport { animated, useSpring } from 'react-spring';\r\nimport './SplashScreen.css';\r\nconst SplashScreen = () => {\r\n    const [visibility, setVisibility] = useState(true);\r\n    const props = useSpring(\r\n        { x: 0, from: { x: 544 }\r\n    });\r\n    const bgSpring = useSpring({\r\n        config: {tension: 30, velocity: 300},\r\n        from: {opacity: 1},\r\n        to: {opacity: 0},\r\n        onRest: () => {setVisibility(false)}\r\n    });\r\n    return (\r\n        <>\r\n        {visibility &&\r\n        <animated.div className=\"splash\" style={bgSpring}>\r\n            <animated.svg className=\"splashText\" strokeDashoffset={props.x} width=\"525\" height=\"73\" viewBox=\"0 0 525 73\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path strokeDasharray=\"544\" d=\"M103.2 2.8L80.544 70H73.056L53.376 12.688L33.6 70H26.208L3.552 2.8H10.848L30.24 60.592L50.304 2.8H56.928L76.704 60.88L96.384 2.8H103.2Z\" stroke=\"white\" strokeWidth=\"2\" />\r\n                <path strokeDasharray=\"544\" d=\"M163.745 63.856V70H116.225V2.8H162.305V8.944H123.329V32.848H158.081V38.896H123.329V63.856H163.745Z\" stroke=\"white\" strokeWidth=\"2\" />\r\n                <path strokeDasharray=\"544\" d=\"M180.444 2.8H187.548V63.856H225.18V70H180.444V2.8Z\" stroke=\"white\" strokeWidth=\"2\" />\r\n                <path strokeDasharray=\"544\" d=\"M264.847 70.576C258.191 70.576 252.175 69.104 246.799 66.16C241.487 63.216 237.295 59.152 234.223 53.968C231.215 48.72 229.711 42.864 229.711 36.4C229.711 29.936 231.215 24.112 234.223 18.928C237.295 13.68 241.519 9.584 246.895 6.64C252.271 3.696 258.287 2.224 264.943 2.224C269.935 2.224 274.543 3.056 278.767 4.72C282.991 6.384 286.575 8.816 289.519 12.016L285.007 16.528C279.759 11.216 273.135 8.56 265.135 8.56C259.823 8.56 254.991 9.776 250.639 12.208C246.287 14.64 242.863 17.968 240.367 22.192C237.935 26.416 236.719 31.152 236.719 36.4C236.719 41.648 237.935 46.384 240.367 50.608C242.863 54.832 246.287 58.16 250.639 60.592C254.991 63.024 259.823 64.24 265.135 64.24C273.199 64.24 279.823 61.552 285.007 56.176L289.519 60.688C286.575 63.888 282.959 66.352 278.671 68.08C274.447 69.744 269.839 70.576 264.847 70.576Z\" stroke=\"white\" strokeWidth=\"2\" />\r\n                <path strokeDasharray=\"544\" d=\"M332.633 70.576C325.977 70.576 319.928 69.104 314.488 66.16C309.112 63.152 304.888 59.056 301.816 53.872C298.808 48.688 297.305 42.864 297.305 36.4C297.305 29.936 298.808 24.112 301.816 18.928C304.888 13.744 309.112 9.68 314.488 6.736C319.928 3.728 325.977 2.224 332.633 2.224C339.289 2.224 345.273 3.696 350.585 6.64C355.961 9.584 360.185 13.68 363.257 18.928C366.329 24.112 367.865 29.936 367.865 36.4C367.865 42.864 366.329 48.72 363.257 53.968C360.185 59.152 355.961 63.216 350.585 66.16C345.273 69.104 339.289 70.576 332.633 70.576ZM332.633 64.24C337.945 64.24 342.744 63.056 347.033 60.688C351.32 58.256 354.68 54.928 357.112 50.704C359.544 46.416 360.76 41.648 360.76 36.4C360.76 31.152 359.544 26.416 357.112 22.192C354.68 17.904 351.32 14.576 347.033 12.208C342.744 9.776 337.945 8.56 332.633 8.56C327.321 8.56 322.489 9.776 318.137 12.208C313.849 14.576 310.457 17.904 307.961 22.192C305.529 26.416 304.312 31.152 304.312 36.4C304.312 41.648 305.529 46.416 307.961 50.704C310.457 54.928 313.849 58.256 318.137 60.688C322.489 63.056 327.321 64.24 332.633 64.24Z\" stroke=\"white\" strokeWidth=\"2\" />\r\n                <path strokeDasharray=\"544\" d=\"M453.58 2.8V70H446.764V16.24L420.364 61.456H417.004L390.604 16.528V70H383.788V2.8H389.644L418.828 52.624L447.724 2.8H453.58Z\" stroke=\"white\" strokeWidth=\"2\" />\r\n                <path strokeDasharray=\"544\" d=\"M522.995 63.856V70H475.475V2.8H521.555V8.944H482.579V32.848H517.331V38.896H482.579V63.856H522.995Z\" stroke=\"white\" strokeWidth=\"2\" />\r\n            </animated.svg>\r\n        </animated.div>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SplashScreen;\r\n","import React from 'react';\nimport './App.css';\nimport About from './components/About/About';\nimport Banner from './components/Banner/Banner';\nimport Contact from './components/Contact/Contact';\nimport Skills from './components/Skills/Skills';\nimport SplashScreen from './components/SplashScreen/SplashScreen';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SplashScreen></SplashScreen>\n        <Banner></Banner>\n        <About></About>\n        <Skills></Skills>\n        <Contact></Contact>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}